<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/WEB-INF/images/" /> <!-- image -->
	<resources mapping="/css/**" location="/WEB-INF/css/" /> <!-- css -->
	<resources mapping="/js/**" location="/WEB-INF/js/" /> <!-- javascript -->
	<resources mapping="/common/**" location="/WEB-INF/common/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.tjoeun.meokjang" />
	
	<!-- 데이터베이스 연결 정보를 설정하는 DriverManagerDataSource 클래스의 bean을 설정한다. -->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username" value="tjoeunit"/>
		<beans:property name="password" value="0000"/>
	</beans:bean>
	
	<!-- 
		데이터베이스 연결 정보와 데이터베이스에 연결한 후 실행할 sql 명령이 저장된 
		xml 파일의 경로를 설정하는 bean을 설정한다. 
	-->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:com/tjoeun/dao/*.xml"/>
		<beans:property name="configLocation" value="classpath:mybatis-config.xml"/>
	</beans:bean>
	
	<!-- 
		데이터베이스 연결 정보, 실행할 sql 명령이 저장된 xml 파일의 경로, typeAliease가
		설정된 환경 설정 xml 파일의 경로를 참조하여 mybatis mapper로 사용할 bean을 설정한다.
	-->	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	<!-- PartyList 클래스의 bean을 만든다. -->
	<beans:bean id="partyList" class="com.tjoeun.vo.PartyList"/>
	
	<!-- PartyVO 클래스의 bean을 만든다. -->
	<beans:bean id="partyVO" class="com.tjoeun.vo.PartyVO"/>
	
	<!-- RepleList 클래스의 bean을 만든다. -->
	<beans:bean id="repleList" class="com.tjoeun.vo.RepleList"/>
	
	<!-- RepleVO 클래스의 bean을 만든다. -->
	<beans:bean id="repleVO" class="com.tjoeun.vo.RepleVO"/>
	
	<!-- Param 클래스의 bean을 만든다. -->
	<beans:bean id="param" class="com.tjoeun.vo.Param"/>
	
	<!-- MemberVO 클래스의 bean을 만든다. -->
	<beans:bean id="memberVO" class="com.tjoeun.vo.MemberVO"/>
	
</beans:beans>
